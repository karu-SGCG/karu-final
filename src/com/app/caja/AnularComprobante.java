package com.app.caja;

import com.entidades.FacturaVenta;
import com.entidades.MtTipoComprobantes;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import org.hibernate.Query;
import org.hibernate.Session;
import util.HibernateUtil;

/**
 * @author Carlos Pati√±o
 */
public class AnularComprobante extends javax.swing.JDialog {

    /**
     * Creates new form AnularComprobante
     */
    private String usuario;
    private String origen;
    private String formulario;
    
    public AnularComprobante(java.awt.Frame parent, boolean modal) {
       super(parent, modal);
        initComponents();
        hibernateSession();
        cargarCombo();
        inicializarCampos();
        this.usuario = "karu";
        this.formulario = this.getClass().getSimpleName();
    }

    public AnularComprobante(String user) {
        initComponents();
        hibernateSession();
        cargarCombo();
        inicializarCampos();
        this.usuario = "karu";
        this.formulario = this.getClass().getSimpleName();
    }
    
    private Session st;
    private FacturaVenta superComprobante;

    private void hibernateSession() {
        st = HibernateUtil.getSessionFactory().openSession();
    }

    private void arranque() {
        this.cmdGuardar.setEnabled(false);
        this.cmdCancelar.setVisible(true);
        this.cmdCancelar.setEnabled(false);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        cmdNuevo = new javax.swing.JButton();
        cmdGuardar = new javax.swing.JButton();
        cmdEditar = new javax.swing.JButton();
        cmdCancelar = new javax.swing.JButton();
        cmdReporte = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtCodTribut = new javax.swing.JTextField();
        txtCodSucTibut = new javax.swing.JTextField();
        txtNroDocum = new javax.swing.JTextField();
        txtImpTotal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cboTipos = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        cmd_cerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Anular Comprobante - KARU SGCG v1.0");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cmdNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/New.png"))); // NOI18N
        cmdNuevo.setToolTipText("Nuevo");
        cmdNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNuevoActionPerformed(evt);
            }
        });

        cmdGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/Save.png"))); // NOI18N
        cmdGuardar.setToolTipText("Guardar");
        cmdGuardar.setEnabled(false);
        cmdGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGuardarActionPerformed(evt);
            }
        });

        cmdEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/edit.png"))); // NOI18N
        cmdEditar.setToolTipText("Editar");
        cmdEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditarActionPerformed(evt);
            }
        });

        cmdCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/cancel32.png"))); // NOI18N
        cmdCancelar.setToolTipText("Cancelar");
        cmdCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelarActionPerformed(evt);
            }
        });

        cmdReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/Tasks.png"))); // NOI18N
        cmdReporte.setToolTipText("Reporte");
        cmdReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdReporteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(cmdNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmdNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cmdEditar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdGuardar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdReporte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtCodTribut.setBackground(new java.awt.Color(204, 255, 255));
        txtCodTribut.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtCodTribut.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodTribut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodTributActionPerformed(evt);
            }
        });
        txtCodTribut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodTributKeyTyped(evt);
            }
        });

        txtCodSucTibut.setBackground(new java.awt.Color(204, 255, 255));
        txtCodSucTibut.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtCodSucTibut.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodSucTibut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodSucTibutKeyTyped(evt);
            }
        });

        txtNroDocum.setBackground(new java.awt.Color(204, 255, 255));
        txtNroDocum.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtNroDocum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNroDocum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNroDocumFocusLost(evt);
            }
        });
        txtNroDocum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNroDocumKeyTyped(evt);
            }
        });

        txtImpTotal.setEditable(false);
        txtImpTotal.setBackground(new java.awt.Color(255, 255, 204));
        txtImpTotal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtImpTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel1.setText("Comprobante");

        jLabel2.setText("Tipo Comprob.");

        jLabel3.setText("Imp. Total");

        cboTipos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Anular?");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N", "S" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtCodTribut, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(txtCodSucTibut, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txtNroDocum, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtImpTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTipos, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodTribut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodSucTibut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNroDocum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtImpTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        cmd_cerrar.setText("Cerrar");
        cmd_cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_cerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cmd_cerrar))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmd_cerrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNuevoActionPerformed
        habilitarCampos();
        this.origen = "Anular";
    }//GEN-LAST:event_cmdNuevoActionPerformed

    private void cmdGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGuardarActionPerformed
        guardar();
        reingreso al stock, si ya se "pago" no se puede borrar..
        inicializarCampos();
        deshabilitarCampos();
    }//GEN-LAST:event_cmdGuardarActionPerformed

    private void cmdCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelarActionPerformed
        deshabilitarCampos();
    }//GEN-LAST:event_cmdCancelarActionPerformed

    private void txtCodTributActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodTributActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodTributActionPerformed

    private void cmdEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditarActionPerformed
        habilitarCampos();
    }//GEN-LAST:event_cmdEditarActionPerformed

    private void cmdReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdReporteActionPerformed
        reporte();
    }//GEN-LAST:event_cmdReporteActionPerformed

    private void cmd_cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_cerrarActionPerformed
        this.st.close();
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cmd_cerrarActionPerformed

    private void txtNroDocumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNroDocumKeyTyped
        char car = evt.getKeyChar();
        if (txtNroDocum.getText().length() >= 9) {
            evt.consume();
        }
        if ((car < '0' || car > '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNroDocumKeyTyped

    private void txtCodTributKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodTributKeyTyped
        char car = evt.getKeyChar();
        if (txtCodTribut.getText().length() >= 3) {
            evt.consume();
        }
        if ((car < '0' || car > '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCodTributKeyTyped

    private void txtCodSucTibutKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodSucTibutKeyTyped
        char car = evt.getKeyChar();
        if (txtCodSucTibut.getText().length() >= 3) {
            evt.consume();
        }
        if ((car < '0' || car > '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCodSucTibutKeyTyped

    private void txtNroDocumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNroDocumFocusLost
        FacturaVenta fac = null;
        if (!this.txtNroDocum.getText().equals("")) {
            fac = buscarComprobante();

            if (fac != null) {
                //sumar gravada y exenta
                this.txtImpTotal.setText((fac.getTotalGravada().add(fac.getTotalExenta())).toString());
                
                if(fac.getEstado() == 'A'){
                    JOptionPane.showMessageDialog(null, "El comprobante buscado ya se encuentra anulado.",
                        "Anular Comprobante", JOptionPane.INFORMATION_MESSAGE);
                }
           
            } else {
                JOptionPane.showMessageDialog(null, "Comprobante buscado no existe o no puede ser anulado.",
                        "Anular Comprobante", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtNroDocumFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnularComprobante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnularComprobante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnularComprobante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnularComprobante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AnularComprobante dialog = new AnularComprobante(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboTipos;
    private javax.swing.JButton cmdCancelar;
    private javax.swing.JButton cmdEditar;
    private javax.swing.JButton cmdGuardar;
    private javax.swing.JButton cmdNuevo;
    private javax.swing.JButton cmdReporte;
    private javax.swing.JButton cmd_cerrar;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtCodSucTibut;
    private javax.swing.JTextField txtCodTribut;
    private javax.swing.JTextField txtImpTotal;
    private javax.swing.JTextField txtNroDocum;
    // End of variables declaration//GEN-END:variables

    private void habilitarCampos() {
        this.cmdGuardar.setEnabled(true);
        this.cmdCancelar.setEnabled(true);
        this.cmdNuevo.setEnabled(false);
        this.cmdEditar.setEnabled(false);
    }

    private void deshabilitarCampos() {
        this.cmdGuardar.setEnabled(false);
        this.cmdCancelar.setEnabled(false);
        this.cmdNuevo.setEnabled(true);
        this.cmdEditar.setEnabled(true);
    }

    private void cargarCombo() {
        this.cboTipos.removeAllItems();
        List<MtTipoComprobantes> lista = (List<MtTipoComprobantes>) 
                st.createQuery("From MtTipoComprobantes").list();
        for (MtTipoComprobantes tipoList : lista) {
            this.cboTipos.addItem(tipoList.getCodComp());
        }
    }

    private void inicializarCampos() {
        this.txtCodSucTibut.setText("");
        this.txtCodTribut.setText("");
        this.txtNroDocum.setText("");
    }

    //obtiene descripci√≥n de tipo de comprobante.
    public MtTipoComprobantes obtenerTipoComprobante(String cod) {
        MtTipoComprobantes comp = null;
        try {
            comp = (MtTipoComprobantes) st.get(MtTipoComprobantes.class, cod);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error al realizar consulta. "
                    + "\n" + e.getMessage(), "Facturaci√≥n", JOptionPane.ERROR_MESSAGE);
        }
        return comp;
    }
    
    private FacturaVenta buscarComprobante() {
        FacturaVenta fac = null;
        MtTipoComprobantes comp = obtenerTipoComprobante(this.cboTipos.getSelectedItem().toString());
        String tribut = this.txtCodTribut.getText();
        String suc = this.txtCodSucTibut.getText();
        int nroDocum = Integer.parseInt(this.txtNroDocum.getText());
        
        try {
            Query query = st.createQuery("From FacturaVenta fv where fv.codTributFac = ? and fv.codSucFac = ? "
                    + "and fv.nroDocum = ? and fv.mtTipoComprobantes = ? and fv.estado <> 'P'");

            query.setParameter(0, tribut);
            query.setParameter(1, suc);
            query.setParameter(2, nroDocum);
            query.setParameter(3, comp);

            fac = (FacturaVenta) query.uniqueResult();
            superComprobante = fac;

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ocurri√≥ un error al buscar comprobante."
                    + "\n" + ex.getMessage() + "\n" + ex.getCause(),
                    "Anular Comprobante", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
            return fac;
    }

    public void guardar() {
        Date fechaMod = new Date();
        FacturaVenta comp = superComprobante;
        char estado = 'A';

        if (this.cboTipos.getSelectedItem().toString().equals("S")) {
            estado = 'A';
        } else {
            estado = 'P';
        }
        
        try {
            st.beginTransaction();

            comp.setEstado(estado);
            comp.setFechaMod(fechaMod);
            comp.setAccionMod(origen);
            comp.setUsuarioMod(usuario);
            
            st.update(comp);
            st.getTransaction().commit();

            JOptionPane.showMessageDialog(null, "Operaci√≥n completada satisfactoriamente.",
                    "Anular Comprobante", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            st.getTransaction().rollback();
            JOptionPane.showMessageDialog(null, "Error al guardar registro. " 
                    + "\n" + ex.getMessage()  + "\n" +  ex.getCause(),
                    "Anular Comprobante", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void reporte() {
        JOptionPane.showMessageDialog(this, "No se ha encontrado reporte asociado.", 
                            "Anular Comprobante", JOptionPane.INFORMATION_MESSAGE);
    }
    
}
