
package com.app.caja;

import com.entidades.ArqueoCab;
import com.entidades.ArqueoDet;
import com.entidades.ArqueoDetId;
import com.entidades.Caja;
import com.entidades.MtCajeros;
import com.entidades.MtCondicionPago;
import com.entidades.MtFormaPago;
import com.entidades.MtMonedas;
import java.awt.Color;
import java.awt.HeadlessException;
import static java.awt.event.KeyEvent.VK_F9;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.HIDE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import util.HibernateUtil;
import util.buscar.BuscarComprobante;

/**
 * @author CArlos Patiño
 */
public class ArqueoCaja extends javax.swing.JDialog {

    /**
     * Creates new form Facturacion
     */
    private String usuario;
    private String origen;
    private String formulario;
    private ArqueoCab masterArqueo;
    private int posicion;
    private List<Object> ArrayPrimaryKey;
            
    public ArqueoCaja(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        hibernateSession();
        this.usuario = "karu";
        this.formulario = this.getClass().getSimpleName();
        arranque();
    }

    public ArqueoCaja(String user) {
        setLocationRelativeTo(null);
        initComponents();
        hibernateSession();
        this.usuario = user;
        this.formulario = this.getClass().getSimpleName();
        arranque();
    }

    private Session st;
    private DefaultTableModel model;
    private MtCajeros masterCajero;

    private void hibernateSession() {
        st = HibernateUtil.getSessionFactory().openSession();
    }

    private void arranque() {
        this.cmdProcesarBusqueda.setVisible(false);
        this.cmdGuardar.setEnabled(false);
        this.cmdCancelar.setVisible(true);
        this.cmdCancelar.setEnabled(false);
        tableModel();
        
        buscarRegistros();
    }

    public void tableModel() {
        this.tabArqueo.getColumnModel().getColumn(0).setPreferredWidth(80);
        this.tabArqueo.getColumnModel().getColumn(1).setPreferredWidth(50);
        this.tabArqueo.getColumnModel().getColumn(2).setPreferredWidth(120);
        this.tabArqueo.getColumnModel().getColumn(3).setPreferredWidth(100);
        this.tabArqueo.getColumnModel().getColumn(4).setPreferredWidth(90);
        this.tabArqueo.getColumnModel().getColumn(5).setPreferredWidth(90);
        model = (DefaultTableModel) this.tabArqueo.getModel();
        model.setNumRows(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        txtCodEmpresa1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtNomEmpresa1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabArqueo = new javax.swing.JTable();
        tabPaneCabecera = new javax.swing.JTabbedPane();
        panFactura = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txtCodCaja = new javax.swing.JTextField();
        txtNomCaja = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtFechaDesdeArqueo = new javax.swing.JFormattedTextField();
        txtFechaHastaArqueo = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        cmdProcesar = new javax.swing.JButton();
        txtNroArqueo = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtApertura = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        cmdNuevo = new javax.swing.JButton();
        cmdGuardar = new javax.swing.JButton();
        cmdBorrar = new javax.swing.JButton();
        cmdCancelar = new javax.swing.JButton();
        cmdImprimir = new javax.swing.JButton();
        cmdBuscar = new javax.swing.JButton();
        cmdProcesarBusqueda = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtEsperadoEfectivo = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEsperadoOtros = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtTotalArqueoEfectivo = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        txtTotalArqueoOtros = new javax.swing.JFormattedTextField();
        txtFalSob = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDiferencia = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTotalGral = new javax.swing.JFormattedTextField();
        jPanel7 = new javax.swing.JPanel();
        btnUltimo = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnPrimero = new javax.swing.JButton();
        cmdCerrar = new javax.swing.JButton();
        lblInfoPie = new javax.swing.JLabel();

        jLabel3.setText("jLabel3");

        jRadioButton1.setText("jRadioButton1");

        jLabel21.setText("Empresa");

        txtNomEmpresa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomEmpresa1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cierre de Caja - KARU SGCG v1.0");
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        setResizable(false);

        tabArqueo.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        tabArqueo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo Mov.", "Cód. FP", "Forma de Pago", "Imp. Esperado", "Imp. Arqueado", "Diferencia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabArqueo.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tabArqueo.setEnabled(false);
        tabArqueo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tabArqueoKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabArqueoKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabArqueo);
        if (tabArqueo.getColumnModel().getColumnCount() > 0) {
            tabArqueo.getColumnModel().getColumn(4).setHeaderValue("Imp. Arqueado");
            tabArqueo.getColumnModel().getColumn(5).setHeaderValue("Diferencia");
        }

        tabPaneCabecera.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        panFactura.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel22.setText("Caja");

        txtCodCaja.setEditable(false);
        txtCodCaja.setBackground(new java.awt.Color(255, 255, 255));
        txtCodCaja.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtCodCaja.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodCajaFocusLost(evt);
            }
        });

        txtNomCaja.setEditable(false);
        txtNomCaja.setBackground(new java.awt.Color(204, 255, 255));
        txtNomCaja.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        jLabel1.setText("Fecha Arqueo (Desde)");

        txtFechaDesdeArqueo.setEditable(false);
        txtFechaDesdeArqueo.setBackground(new java.awt.Color(204, 255, 255));
        txtFechaDesdeArqueo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        txtFechaDesdeArqueo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFechaDesdeArqueo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaDesdeArqueoFocusLost(evt);
            }
        });

        txtFechaHastaArqueo.setEditable(false);
        txtFechaHastaArqueo.setBackground(new java.awt.Color(204, 255, 255));
        txtFechaHastaArqueo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        txtFechaHastaArqueo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel10.setText("Fecha Arqueo (Hasta)");

        cmdProcesar.setText("Procesar");
        cmdProcesar.setToolTipText("Procesar Arqueo");
        cmdProcesar.setEnabled(false);
        cmdProcesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdProcesarActionPerformed(evt);
            }
        });

        txtNroArqueo.setEditable(false);
        txtNroArqueo.setBackground(new java.awt.Color(255, 255, 204));
        txtNroArqueo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtNroArqueo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNroArqueo.setToolTipText("Nro. de Arqueo ");
        txtNroArqueo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNroArqueoFocusLost(evt);
            }
        });
        txtNroArqueo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNroArqueoKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNroArqueoKeyPressed(evt);
            }
        });

        jLabel12.setText("Arqueo Nro.");

        jLabel2.setText("Monto Apertura ");

        txtApertura.setEditable(false);
        txtApertura.setBackground(new java.awt.Color(255, 255, 255));
        txtApertura.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtApertura.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtApertura.setToolTipText("Saldo existente en caja por apertura de caja");
        txtApertura.setValue(0);

        javax.swing.GroupLayout panFacturaLayout = new javax.swing.GroupLayout(panFactura);
        panFactura.setLayout(panFacturaLayout);
        panFacturaLayout.setHorizontalGroup(
            panFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panFacturaLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(panFacturaLayout.createSequentialGroup()
                            .addComponent(txtCodCaja, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(1, 1, 1)
                            .addComponent(txtNomCaja, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panFacturaLayout.createSequentialGroup()
                            .addGroup(panFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNroArqueo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(33, 33, 33)
                            .addGroup(panFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtFechaDesdeArqueo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addGroup(panFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panFacturaLayout.createSequentialGroup()
                        .addComponent(txtApertura, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmdProcesar))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtFechaHastaArqueo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        panFacturaLayout.setVerticalGroup(
            panFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panFacturaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panFacturaLayout.createSequentialGroup()
                        .addGroup(panFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFechaHastaArqueo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaDesdeArqueo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panFacturaLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNroArqueo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomCaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodCaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdProcesar)
                    .addComponent(txtApertura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        tabPaneCabecera.addTab("Datos del Arqueo", panFactura);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cmdNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/New.png"))); // NOI18N
        cmdNuevo.setToolTipText("Nuevo");
        cmdNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNuevoActionPerformed(evt);
            }
        });

        cmdGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/Save.png"))); // NOI18N
        cmdGuardar.setToolTipText("Guardar");
        cmdGuardar.setEnabled(false);
        cmdGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGuardarActionPerformed(evt);
            }
        });

        cmdBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/Trashcan_empty.png"))); // NOI18N
        cmdBorrar.setToolTipText("Borrar");
        cmdBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBorrarActionPerformed(evt);
            }
        });

        cmdCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/cancel32.png"))); // NOI18N
        cmdCancelar.setToolTipText("Cancelar");
        cmdCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelarActionPerformed(evt);
            }
        });

        cmdImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/imprimir 24.png"))); // NOI18N
        cmdImprimir.setToolTipText("Imprimir Arqueo de Caja");
        cmdImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdImprimirActionPerformed(evt);
            }
        });

        cmdBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/Search (2).png"))); // NOI18N
        cmdBuscar.setToolTipText("Buscar");
        cmdBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBuscarActionPerformed(evt);
            }
        });

        cmdProcesarBusqueda.setText("Buscar");
        cmdProcesarBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdProcesarBusquedaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmdNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdProcesarBusqueda)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmdProcesarBusqueda))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmdCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdImprimir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cmdGuardar)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Esperado"));

        jLabel4.setText("Efectivo");

        txtEsperadoEfectivo.setEditable(false);
        txtEsperadoEfectivo.setBackground(new java.awt.Color(255, 255, 255));
        txtEsperadoEfectivo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtEsperadoEfectivo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtEsperadoEfectivo.setToolTipText("Importe esperado en efectivo");
        txtEsperadoEfectivo.setValue(0);

        jLabel5.setText("Otros");

        txtEsperadoOtros.setEditable(false);
        txtEsperadoOtros.setBackground(new java.awt.Color(255, 255, 255));
        txtEsperadoOtros.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtEsperadoOtros.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtEsperadoOtros.setToolTipText("Importe esperado en concepto de otros documentos");
        txtEsperadoOtros.setValue(0);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEsperadoEfectivo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEsperadoOtros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEsperadoEfectivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEsperadoOtros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Arqueado"));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Efectivo");

        txtTotalArqueoEfectivo.setBackground(new java.awt.Color(255, 255, 204));
        txtTotalArqueoEfectivo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtTotalArqueoEfectivo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalArqueoEfectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalArqueoEfectivoActionPerformed(evt);
            }
        });
        txtTotalArqueoEfectivo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTotalArqueoEfectivoFocusLost(evt);
            }
        });

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Otros");

        txtTotalArqueoOtros.setEditable(false);
        txtTotalArqueoOtros.setBackground(new java.awt.Color(255, 255, 255));
        txtTotalArqueoOtros.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtTotalArqueoOtros.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalArqueoOtros.setAutoscrolls(false);
        txtTotalArqueoOtros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalArqueoOtrosActionPerformed(evt);
            }
        });

        txtFalSob.setEditable(false);
        txtFalSob.setBackground(new java.awt.Color(255, 255, 255));
        txtFalSob.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtFalSob.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Faltante / Sobrante");

        txtDiferencia.setEditable(false);
        txtDiferencia.setBackground(new java.awt.Color(204, 255, 255));
        txtDiferencia.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtDiferencia.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDiferencia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel9.setText("Diferencia");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(txtTotalArqueoEfectivo, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDiferencia, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addComponent(txtFalSob)
                            .addComponent(txtTotalArqueoOtros))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTotalArqueoEfectivo)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTotalArqueoOtros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFalSob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtEstado.setBackground(new java.awt.Color(235, 234, 235));
        txtEstado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtEstado.setForeground(new java.awt.Color(255, 0, 51));
        txtEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstadoActionPerformed(evt);
            }
        });

        jLabel7.setText("Total Gral.");

        txtTotalGral.setEditable(false);
        txtTotalGral.setBackground(new java.awt.Color(204, 255, 255));
        txtTotalGral.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtTotalGral.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalGral.setToolTipText("Total Gral. de lo arqueado en el día");
        txtTotalGral.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTotalGral, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEstado)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtTotalGral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.setToolTipText("Panel de Navegación");

        btnUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/ULTIMO.png"))); // NOI18N
        btnUltimo.setToolTipText("Último Registro");
        btnUltimo.setMaximumSize(new java.awt.Dimension(24, 24));
        btnUltimo.setMinimumSize(new java.awt.Dimension(24, 24));
        btnUltimo.setPreferredSize(new java.awt.Dimension(24, 24));
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });

        btnSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/SIGUIENTE.png"))); // NOI18N
        btnSiguiente.setToolTipText("Registro Siguiente");
        btnSiguiente.setMaximumSize(new java.awt.Dimension(24, 24));
        btnSiguiente.setMinimumSize(new java.awt.Dimension(24, 24));
        btnSiguiente.setPreferredSize(new java.awt.Dimension(24, 24));
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/ANTERIOR.png"))); // NOI18N
        btnAnterior.setToolTipText("Registro Anterior");
        btnAnterior.setMaximumSize(new java.awt.Dimension(24, 24));
        btnAnterior.setMinimumSize(new java.awt.Dimension(24, 24));
        btnAnterior.setPreferredSize(new java.awt.Dimension(24, 24));
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnPrimero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/primero.png"))); // NOI18N
        btnPrimero.setToolTipText("Primer Registro");
        btnPrimero.setMaximumSize(new java.awt.Dimension(24, 24));
        btnPrimero.setMinimumSize(new java.awt.Dimension(24, 24));
        btnPrimero.setPreferredSize(new java.awt.Dimension(24, 24));
        btnPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeroActionPerformed(evt);
            }
        });

        cmdCerrar.setText("Cerrar");
        cmdCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCerrarActionPerformed(evt);
            }
        });

        lblInfoPie.setText("Karu");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPrimero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(btnUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblInfoPie, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmdCerrar)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrimero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdCerrar)
                    .addComponent(lblInfoPie))
                .addGap(3, 3, 3))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tabPaneCabecera, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tabPaneCabecera, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomEmpresa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomEmpresa1ActionPerformed
    }//GEN-LAST:event_txtNomEmpresa1ActionPerformed

    private void cmdNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNuevoActionPerformed
        habilitarCampos();
        inicializarCampos();
        this.cmdProcesarBusqueda.setVisible(false);

        this.origen = "Nuevo";
        this.txtNroArqueo.setText("");
        this.txtNroArqueo.grabFocus();
    }//GEN-LAST:event_cmdNuevoActionPerformed

    private void cmdGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGuardarActionPerformed
        BigDecimal diferencia = new BigDecimal(this.txtDiferencia.getValue().toString());

        if (masterArqueo.getEstado() == 'C') {
            JOptionPane.showMessageDialog(null, "El Arqueo de Caja ya esta cerrada. No se pueden realizar modificaciones.",
                    "Arqueo de Caja", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (diferencia.compareTo(BigDecimal.ZERO) != 0) {
                JOptionPane.showMessageDialog(null, "Los montos en efectivo NO CIERRAN. No se puede guardar.",
                        "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
            } else {
                int seleccion = JOptionPane.showConfirmDialog(null, "Al guardar el Arqueo se procederá se cerrar la caja. Está seguro?",
                        "Arqueo de Caja", JOptionPane.YES_NO_OPTION);
                if (seleccion == 0) {
                    guardar();
                    deshabilitarCampos();
                    buscarRegistros();
                }
            }
        }
    }//GEN-LAST:event_cmdGuardarActionPerformed

    private void cmdCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelarActionPerformed
        deshabilitarCampos();
        this.txtFechaDesdeArqueo.setEditable(false);
        this.txtFechaHastaArqueo.setEditable(false);
        this.txtCodCaja.setEditable(false);
    }//GEN-LAST:event_cmdCancelarActionPerformed

    private void cmdImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdImprimirActionPerformed
        if (this.txtNroArqueo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese el nro. de arqueo para imprimir Arqueo de Caja",
                    "Arqueo de Caja", JOptionPane.INFORMATION_MESSAGE);
        } else {
            imprimir();
        }
    }//GEN-LAST:event_cmdImprimirActionPerformed

    private void cmdBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBuscarActionPerformed
        origen = "Buscar";
        inicializarCampos();
        
        this.cmdProcesarBusqueda.setVisible(true);
        this.txtNroArqueo.setEditable(true);
        this.txtNroArqueo.grabFocus();
        this.txtFechaDesdeArqueo.setEditable(true);
        this.txtFechaHastaArqueo.setEditable(true);
        this.txtCodCaja.setEditable(true);
        this.cmdCancelar.setEnabled(true);
    }//GEN-LAST:event_cmdBuscarActionPerformed

    private void cmdBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBorrarActionPerformed
        int seleccion = JOptionPane.showConfirmDialog(null, "Esta seguro que desea borrar el Arqueo de Caja?",
                "Arqueo de Caja", JOptionPane.YES_NO_OPTION);
        if (seleccion == 0) {
            borrarArqueo();
            inicializarCampos();
            buscarRegistros();
        }
    }//GEN-LAST:event_cmdBorrarActionPerformed

    private void txtCodCajaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodCajaFocusLost
        try {
            Caja caja = null;
            txtCodCaja.setText(txtCodCaja.getText().toUpperCase());
            caja = obtenerCaja(txtCodCaja.getText());
            this.txtNomCaja.setText(caja.getNomCaja());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al obtener descripción de la caja. ",
                "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtCodCajaFocusLost

    private void txtFechaDesdeArqueoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaDesdeArqueoFocusLost
    }//GEN-LAST:event_txtFechaDesdeArqueoFocusLost

    private void cmdProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdProcesarActionPerformed
        tableModel();
        procesar();
        actualizarResumen();
        this.cmdGuardar.setEnabled(true);
    }//GEN-LAST:event_cmdProcesarActionPerformed

    private void tabArqueoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabArqueoKeyTyped
        char car = evt.getKeyChar();
        if ((car < '0' || car > '9') || (car == '.')) {
            evt.consume();
        }
    }//GEN-LAST:event_tabArqueoKeyTyped

    private void tabArqueoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabArqueoKeyPressed
       /* if (evt.getKeyCode() == VK_TAB || evt.getKeyCode() == VK_ENTER) {
            actualizarGrilla();
        } */
    }//GEN-LAST:event_tabArqueoKeyPressed

    private void txtNroArqueoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNroArqueoKeyPressed
        if (evt.getKeyCode() == VK_F9) {
            buscarArqueo();
        }
    }//GEN-LAST:event_txtNroArqueoKeyPressed

    private void txtNroArqueoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNroArqueoFocusLost
        try {
            if (!this.txtNroArqueo.getText().isEmpty() || !origen.equals("Buscar")) {
                verificarArqueo(Integer.parseInt(this.txtNroArqueo.getText()));
            }
        } catch (NumberFormatException e) {
        }
    }//GEN-LAST:event_txtNroArqueoFocusLost

    private void txtNroArqueoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNroArqueoKeyTyped
       char car = evt.getKeyChar();
        if (txtNroArqueo.getText().length() >= 10) {
            evt.consume();
        }
        if ((car < '0' || car > '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNroArqueoKeyTyped

    private void txtTotalArqueoEfectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalArqueoEfectivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalArqueoEfectivoActionPerformed

    private void txtEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstadoActionPerformed

    private void txtTotalArqueoEfectivoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTotalArqueoEfectivoFocusLost
        try {
            this.txtTotalArqueoEfectivo.commitEdit();
            actualizarResumen();
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_txtTotalArqueoEfectivoFocusLost

    private void txtTotalArqueoOtrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalArqueoOtrosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalArqueoOtrosActionPerformed

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
        ultimo();
    }//GEN-LAST:event_btnUltimoActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        siguiente();
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        anterior();
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeroActionPerformed
        primero();
    }//GEN-LAST:event_btnPrimeroActionPerformed

    private void cmdCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCerrarActionPerformed
        this.st.close();
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cmdCerrarActionPerformed

    private void cmdProcesarBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdProcesarBusquedaActionPerformed
        buscarRegistros();
    }//GEN-LAST:event_cmdProcesarBusquedaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArqueoCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArqueoCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArqueoCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArqueoCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ArqueoCaja dialog = new ArqueoCaja(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnPrimero;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JButton cmdBorrar;
    private javax.swing.JButton cmdBuscar;
    private javax.swing.JButton cmdCancelar;
    private javax.swing.JButton cmdCerrar;
    private javax.swing.JButton cmdGuardar;
    private javax.swing.JButton cmdImprimir;
    private javax.swing.JButton cmdNuevo;
    private javax.swing.JButton cmdProcesar;
    private javax.swing.JButton cmdProcesarBusqueda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInfoPie;
    private javax.swing.JPanel panFactura;
    private javax.swing.JTable tabArqueo;
    private javax.swing.JTabbedPane tabPaneCabecera;
    private javax.swing.JFormattedTextField txtApertura;
    private javax.swing.JTextField txtCodCaja;
    private javax.swing.JTextField txtCodEmpresa1;
    private javax.swing.JFormattedTextField txtDiferencia;
    private javax.swing.JFormattedTextField txtEsperadoEfectivo;
    private javax.swing.JFormattedTextField txtEsperadoOtros;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JFormattedTextField txtFalSob;
    private javax.swing.JFormattedTextField txtFechaDesdeArqueo;
    private javax.swing.JFormattedTextField txtFechaHastaArqueo;
    private javax.swing.JTextField txtNomCaja;
    private javax.swing.JTextField txtNomEmpresa1;
    private javax.swing.JTextField txtNroArqueo;
    private javax.swing.JFormattedTextField txtTotalArqueoEfectivo;
    private javax.swing.JFormattedTextField txtTotalArqueoOtros;
    private javax.swing.JFormattedTextField txtTotalGral;
    // End of variables declaration//GEN-END:variables

    public void inicializarCampos() {
        this.txtEsperadoEfectivo.setValue(0);
        this.txtEsperadoOtros.setValue(0);
        this.txtFalSob.setValue(0);
        this.txtTotalArqueoEfectivo.setValue(0);
        this.txtTotalArqueoOtros.setValue(0);
        this.txtFalSob.setValue(0);
        this.txtDiferencia.setValue(0);
        this.txtTotalGral.setValue(0);

        this.txtNroArqueo.setText("");
        this.txtFechaDesdeArqueo.setValue(null);
        this.txtFechaHastaArqueo.setValue(null);
        this.txtCodCaja.setText("");
        this.txtNomCaja.setText("");
        this.txtApertura.setValue(0);

        tableModel();
    }

    private void habilitarCampos() {
        this.cmdCancelar.setEnabled(true);
        this.cmdBorrar.setEnabled(false);
        this.cmdNuevo.setEnabled(false);
      
        this.txtNroArqueo.setEditable(true);
        this.tabArqueo.setEnabled(true);
    }

    private void deshabilitarCampos() {
        this.cmdGuardar.setEnabled(false);
        this.cmdCancelar.setEnabled(false);
        this.cmdBorrar.setEnabled(true);
        this.cmdNuevo.setEnabled(true);
        this.cmdProcesar.setEnabled(false);
        
        this.txtNroArqueo.setEditable(false);
        
        this.tabArqueo.setEnabled(false);
    }

    //obtiene descripción de condición de pago.
    public MtCondicionPago obtenerCondPago(int cod) {
        MtCondicionPago cond = null;
        try {
            cond = (MtCondicionPago) st.get(MtCondicionPago.class, cod);
            if (cond == null) {
                JOptionPane.showMessageDialog(null, "Código buscado no existe. Intente de nuevo.",
                        "Factura Venta", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error al realizar consulta. "
                    + "\n" + e.getMessage(), "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
        }
        return cond;
    }

    //obtiene descripción de moneda.
    public MtMonedas obtenerMoneda(int cod) {
        MtMonedas mon = null;
        try {
            mon = (MtMonedas) st.get(MtMonedas.class, cod);
            if (mon == null) {
                JOptionPane.showMessageDialog(null, "Código buscado no existe. Intente de nuevo.",
                        "Factura Venta", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error al realizar consulta. " 
                    + "\n" + e.getMessage(), "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
        }
        return mon;
    }

    //obtiene descripcion de la forma de pago.
    public MtFormaPago obtenerFormaPago(int cod) {
        MtFormaPago comp = null;
        try {
            comp = (MtFormaPago) st.get(MtFormaPago.class, cod);
            if (comp == null) {
                JOptionPane.showMessageDialog(null, "Código buscado no existe. Intente de nuevo.",
                        "Factura Venta", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error al realizar consulta. " 
                    + "\n" + e.getMessage(), "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
        }
        return comp;
    }

    //retorna la caja asignada.
    public Caja obtenerCaja(String cod) {
        Caja caja = null;
        try {
            caja = (Caja) st.get(Caja.class, cod);
            if (caja == null) {
                JOptionPane.showMessageDialog(null, "Código de caja buscado no existe. Intente de nuevo.",
                        "Factura Venta", JOptionPane.INFORMATION_MESSAGE);
            } else {
                this.txtNomCaja.setText(caja.getNomCaja());
            }
        } catch (HibernateException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error al realizar consulta. " 
                    + "\n" + e.getMessage(), "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
        }
        return caja;
    }

    //obtiene el datos del cajero
    public void obtenerCajero(String cajero) {
        MtCajeros caj = null;
        try {
            Query query = st.createQuery("From MtCajeros c Where c.codUsuario = ? and c.activo = 'S'");
            query.setParameter(0, cajero);
            try {
                caj = (MtCajeros) query.uniqueResult();
                this.masterCajero = caj;
            } catch (HibernateException e) {
                JOptionPane.showMessageDialog(null, "Cajero activo para varias cajas." + e.getMessage(),
                        "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | HibernateException ex) {
            JOptionPane.showMessageDialog(null, "Error al recuperar registros del Cajero." 
                    + "\n" + ex.getMessage(), "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void procesar(){
        procesarResumen();
        actualizarTotales();
    }

    public void verificarArqueo(int ope) {
        try {
                ArqueoCab var = obtenerHabilitacion(ope);

                if (var != null) {
                    masterArqueo = var;
                    cargarDetalle(var);
                } else {
                    JOptionPane.showMessageDialog(null, "Arqueo no encontrado o "
                            + "verifique que la caja asociada haya sido cerrada. ", 
                            "Arqueo de Caja", JOptionPane.INFORMATION_MESSAGE);
                }
        } catch (NumberFormatException e) {
        }
    }

    private void buscarArqueo(){
        ArqueoCab var = null;
        try {
            BuscarComprobante formBusqueda
                    = new BuscarComprobante(this, true, 'C');
            formBusqueda.setDefaultCloseOperation(HIDE_ON_CLOSE);
            formBusqueda.setVisible(true);

            int codigo = Integer.parseInt(formBusqueda.getCodigoRetorno());
            System.out.println("Seleccionado: " + codigo);
            if (codigo > 0) {
               var = obtenerHabilitacion(codigo);
               
               if(var != null){
                   masterArqueo = var;
                   cargarDetalle(var);
               }
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error al realizar búsqueda de comprobante. " + "\n"
                    + e.getMessage(), "Error - Habilitar Caja", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void cargarDetalle(ArqueoCab arq) {
        try {
            Date fechaHasta = new Date();
            
            if(arq.getFechaHasta() != null){
                fechaHasta = arq.getFechaHasta();
            }
            
            this.txtNroArqueo.setText(String.valueOf(arq.getNroOperacion()));
            this.txtFechaDesdeArqueo.setValue(arq.getFechaDesde());
            this.txtFechaHastaArqueo.setValue(fechaHasta);
            this.txtCodCaja.setText(arq.getCodCaja());
            this.txtNomCaja.setText(obtenerCaja(arq.getCodCaja()).getNomCaja());
            this.txtApertura.setValue(arq.getAperturaMn());
            this.txtFalSob.setValue(arq.getImporteAjuste());

            this.cmdProcesar.setEnabled(true);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
     
    private ArqueoCab obtenerHabilitacion(int oper) {
        ArqueoCab arq = null;

        try {
            arq = (ArqueoCab) st.get(ArqueoCab.class, oper);
            if (arq == null) {
                JOptionPane.showMessageDialog(null, "Código buscado no existe. Intente de nuevo.",
                        "Habilitar Caja", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (HibernateException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error al realizar consulta. "
                    + "\n" + e.getMessage(), "Error - Habilitar Caja", JOptionPane.ERROR_MESSAGE);
        }

        return arq;
    }
   
    public void procesarResumen() {
        ArqueoCab var = masterArqueo;
        List<Object[]> retorno;
        Date fechaHasta = new Date();

        try {

            if (var.getFechaHasta() != null) {
                fechaHasta = var.getFechaHasta();
            }

            SQLQuery query = st.createSQLQuery("Select (case when a.tipo_mov = 1 then 'VENTA' else 'COBRANZA' end), a.forma_pago, "
                    + " f.descripcion, a.importe as imp_arqueado, a.importe as imp_esperado, (a.importe - a.importe) as diferencia "
                    + " from p_arqueo('" + var.getFechaDesde() + "', '" + fechaHasta + "', '" + var.getCodCaja() + "') a "
                    + " join mt_forma_pago f on f.cod_tipo = a.forma_pago");

            retorno = query.list();

            //carga el resultado en la grilla
            for (Object[] fila : retorno) {
                model.addRow(fila);
            }

        } catch (HibernateException e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error al procesar resumen de arqueo."
                    + "\n" + e.getMessage(), "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void actualizarTotales() {
        BigDecimal totalEsperadoEfec = BigDecimal.ZERO;
        BigDecimal totalEsperadoOtros = BigDecimal.ZERO;
        BigDecimal totalArqueadoEfec = BigDecimal.ZERO;
        BigDecimal totalArqueadoOtros = BigDecimal.ZERO;

        int cantArt = model.getRowCount();

        try {
            for (int i = 0; i < cantArt; i++) {
                if (Integer.parseInt(model.getValueAt(i, 1).toString()) == 1) {
                    //pago en efectivo
                    totalEsperadoEfec = totalEsperadoEfec.add(
                            new BigDecimal(model.getValueAt(i, 3).toString()));
                    totalArqueadoEfec = totalArqueadoEfec.add(
                            new BigDecimal(model.getValueAt(i, 4).toString()));
                } else if (Integer.parseInt(model.getValueAt(i, 1).toString()) != 4) {
                    //que no sea NC
                    totalEsperadoOtros = totalEsperadoOtros.add(
                            new BigDecimal(model.getValueAt(i, 3).toString()));
                    totalArqueadoOtros = totalArqueadoOtros.add(
                            new BigDecimal(model.getValueAt(i, 4).toString()));
                } else {

                }
            }

            this.txtEsperadoEfectivo.setValue(totalEsperadoEfec);
            this.txtEsperadoOtros.setValue(totalEsperadoOtros);
            this.txtTotalArqueoEfectivo.setValue(totalArqueadoEfec);
            this.txtTotalArqueoOtros.setValue(totalArqueadoOtros);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error al actualizar totales. "
                    + "\n" + e.getMessage(), "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private void guardar() {
        try {

            st.beginTransaction();

            ArqueoCab arqueo = masterArqueo;
            arqueo.setEstado('C');
            arqueo.setFechaHasta(new Date());
            
            st.update(arqueo);
            guardarDetalle();

            st.getTransaction().commit();
            JOptionPane.showMessageDialog(null, "Arqueo de Caja guardado exitosamente.",
                    "Arqueo de Caja", JOptionPane.INFORMATION_MESSAGE);
        } catch (HibernateException | HeadlessException ex) {
            st.getTransaction().rollback();
            JOptionPane.showMessageDialog(null, "Error al guardar registro el arqueo de caja. "
                    + "\n" + ex.getMessage() + "\n" + ex.getCause(), "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }

        deshabilitarCampos();
    }

    private void guardarDetalle() {
        int cantArt = model.getRowCount();

        try {
            for (int i = 0; i < cantArt; i++) {

                ArqueoDet det = new ArqueoDet();
                ArqueoDetId id = new ArqueoDetId();

                id.setNroOperacion(masterArqueo.getNroOperacion());
                id.setLinea(i + 1);
                det.setId(id);
                det.setMtMonedas(obtenerMoneda(1));
                
                if ((model.getValueAt(i, 1).toString()).equals("VENTA")) {
                    det.setTipoMov(1);
                } else {
                    det.setTipoMov(2);
                }
                det.setFormaPago((Integer) model.getValueAt(i, 1));
                det.setImporteEsperado(new BigDecimal(model.getValueAt(i, 3).toString()));
                det.setImporteArqueado(new BigDecimal(model.getValueAt(i, 4).toString()));
                det.setDiferencia(new BigDecimal(model.getValueAt(i, 5).toString()));
                det.setUsuarioMod(usuario);
                det.setFechaMod(new Date());
                det.setAccionMod(origen);

                st.save(det);
            }
        } catch (HibernateException e) {
            st.getTransaction().rollback();
            JOptionPane.showMessageDialog(null, "Ocurrió un error al guardar detalle del arqueo de caja. "
                    + "\n" + e.getMessage() + "\n" + e.getCause(),
                    "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    public void borrarArqueo() {
        try {
            st.clear();
            st.beginTransaction();
            
            ArqueoCab arq = masterArqueo;
            
            borrarDetalle();
            arq.setEstado('A');
            arq.setAccionMod("Editar");
            arq.setUsuarioMod(usuario);
            st.update(arq);
            
            st.getTransaction().commit();

            JOptionPane.showMessageDialog(null, "Detalle del Arqueo de Caja borrado exitosamente.",
                    "Arqueo de Caja", JOptionPane.INFORMATION_MESSAGE);
            
        } catch (HeadlessException | HibernateException e) {
            st.getTransaction().rollback();
            JOptionPane.showMessageDialog(null, "Ocurrió un error al borrar detalle del arqueo de caja. "
                    + "\n" + e.getMessage() + "\n" + e.getCause(),
                    "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private void borrarDetalle() {
        try {
            List<ArqueoDet> borrar = obtenerDetalle(masterArqueo.getNroOperacion());

            for (ArqueoDet var : borrar) {
                st.delete(var);
            }
        } catch (HibernateException e) {
            st.getTransaction().rollback();
            JOptionPane.showMessageDialog(null, "Ocurrió un error al borrar detalle del arqueo de caja. "
                    + "\n" + e.getMessage() + "\n" + e.getCause(),
                    "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private List<ArqueoDet> obtenerDetalle(int trans) {
        List<ArqueoDet> retorno = null;
        try {

            Query query = st.createQuery("From ArqueoDet a join a.id i Where i.nroOperacion = ?");
            query.setParameter(0, trans);

            retorno = query.list();

        } catch (Exception e) {
            e.printStackTrace();
        }
        return retorno;
    }

    public void actualizarResumen() {
        try {
            BigDecimal totalEsperadoEfec = new BigDecimal(this.txtEsperadoEfectivo.getValue().toString());
            BigDecimal totalEsperadoOtros = new BigDecimal(this.txtEsperadoOtros.getValue().toString());
            BigDecimal totalArqueadoEfec = new BigDecimal(this.txtTotalArqueoEfectivo.getValue().toString());
            BigDecimal totalArqueadoOtros = new BigDecimal(this.txtTotalArqueoOtros.getValue().toString());
            BigDecimal faltante = new BigDecimal(this.txtFalSob.getValue().toString());

            BigDecimal totalEsperado = totalEsperadoEfec.add(totalEsperadoOtros);
            BigDecimal totalArqueado = (totalArqueadoEfec.add(totalArqueadoOtros)).add(faltante);
            BigDecimal diferencia = totalArqueado.subtract(totalEsperado);

            this.txtDiferencia.setValue(diferencia);

            if (diferencia.compareTo(BigDecimal.ZERO) != 0) {
                this.txtEstado.setText("Los montos en efectivo NO CIERRAN");
                this.txtEstado.setForeground(Color.RED);
                this.cmdGuardar.setEnabled(false);
            } else {
                this.txtEstado.setText("Los montos en efectivo CIERRAN");
                this.txtEstado.setForeground(Color.GREEN);
                this.cmdGuardar.setEnabled(true);
            }
            
            this.txtTotalGral.setValue(totalArqueado);
            
        } catch (Exception e) {
        }
    }
    
     private void primero() {
        if (posicion > 0 && ArrayPrimaryKey.size() > 0) {
            posicion = 0;
            recuperarRegistros(posicion);
            String mensaje = "Registro " + String.valueOf(posicion + 1).trim() + " de " + String.valueOf(ArrayPrimaryKey.size()).trim();
            this.lblInfoPie.setText(mensaje);
        } else {

        }
    }

    private void anterior() {
        if (posicion > 0 && ArrayPrimaryKey.size() > 0) {
            posicion--;
            recuperarRegistros(posicion);
            String mensaje = "Registro " + String.valueOf(posicion + 1).trim() + " de " + String.valueOf(ArrayPrimaryKey.size()).trim();
            this.lblInfoPie.setText(mensaje);
        } else {

        }
    }

    private void siguiente() {
        if (posicion < ArrayPrimaryKey.size() - 1 && ArrayPrimaryKey.size() > 0) {
            posicion++;
            recuperarRegistros(posicion);
            String mensaje = "Registro " + String.valueOf(posicion + 1).trim() + " de " + String.valueOf(ArrayPrimaryKey.size()).trim();
            this.lblInfoPie.setText(mensaje);
        } else {

        }
    }

    private void ultimo() {
        if (posicion < ArrayPrimaryKey.size() - 1 && ArrayPrimaryKey.size() > 0) {
            posicion = ArrayPrimaryKey.size() - 1;
            recuperarRegistros(posicion);
            String mensaje = "Registro " + String.valueOf(posicion + 1).trim() + " de " + String.valueOf(ArrayPrimaryKey.size()).trim();
            this.lblInfoPie.setText(mensaje);
        } else {

        }
    }

    private void buscarRegistros() {
        try {
            String SqlQuery = "select nro_operacion from arqueo_cab where nro_operacion > 0 ";

            if (!this.txtNroArqueo.getText().isEmpty()) {
                SqlQuery = SqlQuery + " and nro_operacion = '" + this.txtNroArqueo.getText().trim() + "'";
            }
            if (!this.txtFechaDesdeArqueo.getText().isEmpty()) {
                SqlQuery = SqlQuery + " and fecha_desde >= to_timestamp('" + this.txtFechaDesdeArqueo.getText().toString() + "', 'dd/MM/yyyy')";
            }
            if (!this.txtFechaHastaArqueo.getText().isEmpty()) {
                SqlQuery = SqlQuery + " and fecha_hasta <= to_timestamp('" + this.txtFechaHastaArqueo.getText().toString() + "', 'dd/MM/yyyy')";
            }
            if (!this.txtCodCaja.getText().isEmpty()) {
                SqlQuery = SqlQuery + " and cod_caja = '" + this.txtCodCaja.getText().trim() + "'";
            }

            SqlQuery = SqlQuery + " order by nro_operacion";

            Query consulta = st.createSQLQuery(SqlQuery);

            ArrayPrimaryKey = consulta.list();

            if (ArrayPrimaryKey.size() > 1) {
                posicion = 0;
                recuperarRegistros(posicion);
                this.btnPrimero.setEnabled(true);
                this.btnAnterior.setEnabled(true);
                this.btnSiguiente.setEnabled(true);
                this.btnUltimo.setEnabled(true);
                this.cmdBorrar.setEnabled(true);
                String mensaje = "Registro " + String.valueOf(posicion + 1).trim() + " de " + String.valueOf(ArrayPrimaryKey.size()).trim();
                this.lblInfoPie.setText(mensaje);

            } else if (ArrayPrimaryKey.size() == 1) {
                posicion = 0;
                recuperarRegistros(posicion);
                this.cmdBorrar.setEnabled(true);

                String mensaje = "Registro " + String.valueOf(posicion + 1).trim() + " de " + String.valueOf(ArrayPrimaryKey.size()).trim();
                this.lblInfoPie.setText(mensaje);
            } else {
                JOptionPane.showMessageDialog(null, "No existen registros para mostrar.", "Buscar", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (HeadlessException | HibernateException e) {
            e.printStackTrace();
        }
    }

    private void recuperarRegistros(int indice) {
        int nroTrans = Integer.parseInt(ArrayPrimaryKey.get(indice).toString());
       // FacturaVenta registroCabecera = (FacturaVenta) st.load(FacturaVenta.class, nroTrans);
        verificarArqueo(nroTrans);
    }
    
    private void imprimir() {
        try {
            int codigo = Integer.parseInt(this.txtNroArqueo.getText());
            Connection conexion;
            conexion = DriverManager.getConnection("jdbc:postgresql://localhost:5432/karu", "karu", "karu");
            Map parametros = new HashMap();
            //parametros que enviamos al report.
            parametros.put("nro_arqueo", codigo);
            parametros.put("cajero", usuario);
            JasperReport elReporte = (JasperReport) JRLoader.loadObject(ClassLoader.getSystemResource("com/informes/ArqueoCaja.jasper"));
            JasperPrint imprimir = JasperFillManager.fillReport(elReporte, parametros, conexion);
            JasperViewer visor = new JasperViewer(imprimir, false);
            visor.setTitle("Arqueo de Caja");
            visor.setVisible(true);
            conexion.close();
        } catch (NumberFormatException | SQLException | JRException ex) {
            JOptionPane.showMessageDialog(null, "Ocurrió un error al ejecutar el reporte de Arqueo de Caja "
                    + "\n" + ex.getMessage() + "\n" + ex.getCause(),
                    "Arqueo de Caja", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }
}
