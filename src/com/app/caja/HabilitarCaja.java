package com.app.caja;

import com.app.caja.controladores.ControlArqueo;
import com.entidades.ArqueoCab;
import com.entidades.Caja;
import java.awt.HeadlessException;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.HIDE_ON_CLOSE;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.exception.ConstraintViolationException;
import util.HibernateUtil;
import util.buscar.BuscarComprobante;

/**
 * @author Carlos Pati√±o
 */
public class HabilitarCaja extends javax.swing.JDialog {

    /**
     * Creates new form AnularComprobante
     */
    private String usuario;
    private String origen = "";
    private String formulario;
    private ArqueoCab masterArqueo;
    private int posicion;
    private List<Object> ArrayPrimaryKey;
    
    public HabilitarCaja(java.awt.Frame parent, boolean modal) {
       super(parent, modal);
        initComponents();
        hibernateSession();
        inicializarCampos();
        this.usuario = "karu";
        this.formulario = this.getClass().getSimpleName();
        arranque();
    }

    public HabilitarCaja(String user) {
        initComponents();
        hibernateSession();
        inicializarCampos();
        this.usuario = "karu";
        this.formulario = this.getClass().getSimpleName();
        arranque();
    }
    
    private Session st;
    private BigInteger masterNroOpe;

    private void hibernateSession() {
        st = HibernateUtil.getSessionFactory().openSession();
    }

    private void arranque() {
        this.cmdGuardar.setEnabled(false);
        this.cmdCancelar.setEnabled(false);
        this.lblEstado.setText("");
        buscarRegistros();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        cmdNuevo = new javax.swing.JButton();
        cmdGuardar = new javax.swing.JButton();
        cmdEditar = new javax.swing.JButton();
        cmdCancelar = new javax.swing.JButton();
        cmdBuscar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodCaja = new javax.swing.JTextField();
        txtNomCaja = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNroOpe = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMontoAper = new javax.swing.JFormattedTextField();
        txtFecha = new javax.swing.JFormattedTextField();
        lblEstado = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnUltimo = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnPrimero = new javax.swing.JButton();
        cmdCerrar = new javax.swing.JButton();
        lblInfoPie = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Habilitar Caja - KARU SGCG v1.0");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cmdNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/New.png"))); // NOI18N
        cmdNuevo.setToolTipText("Nuevo");
        cmdNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNuevoActionPerformed(evt);
            }
        });

        cmdGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/Save.png"))); // NOI18N
        cmdGuardar.setToolTipText("Guardar");
        cmdGuardar.setEnabled(false);
        cmdGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGuardarActionPerformed(evt);
            }
        });

        cmdEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/edit.png"))); // NOI18N
        cmdEditar.setToolTipText("Editar");
        cmdEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditarActionPerformed(evt);
            }
        });

        cmdCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/cancel32.png"))); // NOI18N
        cmdCancelar.setToolTipText("Cancelar");
        cmdCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelarActionPerformed(evt);
            }
        });

        cmdBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/Search (2).png"))); // NOI18N
        cmdBuscar.setToolTipText("Buscar");
        cmdBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(cmdNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmdNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmdBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cmdEditar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdGuardar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Caja");

        txtCodCaja.setBackground(new java.awt.Color(255, 255, 204));
        txtCodCaja.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodCajaFocusLost(evt);
            }
        });

        txtNomCaja.setEditable(false);
        txtNomCaja.setBackground(new java.awt.Color(255, 255, 255));
        txtNomCaja.setFocusable(false);

        jLabel2.setText("Fecha");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nro. Op.");

        txtNroOpe.setBackground(new java.awt.Color(204, 255, 255));
        txtNroOpe.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtNroOpe.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNroOpe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNroOpeActionPerformed(evt);
            }
        });
        txtNroOpe.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNroOpeFocusLost(evt);
            }
        });

        jLabel4.setText("Apertura");

        txtMontoAper.setBackground(new java.awt.Color(255, 255, 204));
        txtMontoAper.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        txtMontoAper.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMontoAper.setToolTipText("Monto de Apertura para la caja");
        txtMontoAper.setValue(0);
        txtMontoAper.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMontoAperFocusLost(evt);
            }
        });
        txtMontoAper.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMontoAperKeyTyped(evt);
            }
        });

        txtFecha.setEditable(false);
        txtFecha.setBackground(new java.awt.Color(204, 255, 255));
        txtFecha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        txtFecha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFecha.setToolTipText("Fecha del Arqueo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNroOpe, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCodCaja, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(txtNomCaja))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtMontoAper, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtNroOpe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodCaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomCaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtMontoAper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setToolTipText("Panel de Navegaci√≥n");

        btnUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/ULTIMO.png"))); // NOI18N
        btnUltimo.setToolTipText("√öltimo Registro");
        btnUltimo.setMaximumSize(new java.awt.Dimension(24, 24));
        btnUltimo.setMinimumSize(new java.awt.Dimension(24, 24));
        btnUltimo.setPreferredSize(new java.awt.Dimension(24, 24));
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });

        btnSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/SIGUIENTE.png"))); // NOI18N
        btnSiguiente.setToolTipText("Registro Siguiente");
        btnSiguiente.setMaximumSize(new java.awt.Dimension(24, 24));
        btnSiguiente.setMinimumSize(new java.awt.Dimension(24, 24));
        btnSiguiente.setPreferredSize(new java.awt.Dimension(24, 24));
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/ANTERIOR.png"))); // NOI18N
        btnAnterior.setToolTipText("Registro Anterior");
        btnAnterior.setMaximumSize(new java.awt.Dimension(24, 24));
        btnAnterior.setMinimumSize(new java.awt.Dimension(24, 24));
        btnAnterior.setPreferredSize(new java.awt.Dimension(24, 24));
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnPrimero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/primero.png"))); // NOI18N
        btnPrimero.setToolTipText("Primer Registro");
        btnPrimero.setMaximumSize(new java.awt.Dimension(24, 24));
        btnPrimero.setMinimumSize(new java.awt.Dimension(24, 24));
        btnPrimero.setPreferredSize(new java.awt.Dimension(24, 24));
        btnPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeroActionPerformed(evt);
            }
        });

        cmdCerrar.setText("Cerrar");
        cmdCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCerrarActionPerformed(evt);
            }
        });

        lblInfoPie.setText("Karu");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(btnPrimero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(btnUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblInfoPie, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmdCerrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrimero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdCerrar)
                    .addComponent(lblInfoPie))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNuevoActionPerformed
        nuevo();
        origen = "Nuevo";
        this.txtCodCaja.grabFocus();
    }//GEN-LAST:event_cmdNuevoActionPerformed

    private void cmdGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGuardarActionPerformed
        ControlArqueo control = new ControlArqueo();
        ArqueoCab arq = null;
        
        if(origen.equals("Nuevo")){
        arq = control.estadoCaja(this.txtCodCaja.getText(), new Date(), 'A');
        
        if (arq  == null) {
            guardar();
            deshabilitarCampos();
        } else {
            JOptionPane.showMessageDialog(null, "Ya existe una caja abierta para esta fecha. Proceda a cerrar la caja antes de abrir otra.",
                    "Factura Venta", JOptionPane.ERROR_MESSAGE);
        }
        } else {
            guardarEdicion();
            deshabilitarCampos();
        }
        origen = "";
    }//GEN-LAST:event_cmdGuardarActionPerformed

    private void cmdCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelarActionPerformed
        //inicializarCampos();
        origen = "";
        deshabilitarCampos();
    }//GEN-LAST:event_cmdCancelarActionPerformed

    private void cmdBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBuscarActionPerformed
        buscarArqueo();
    }//GEN-LAST:event_cmdBuscarActionPerformed

    private void cmdEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditarActionPerformed
        origen = "Editar";
        habilitarCampos();
        this.txtNroOpe.setEditable(false);
    }//GEN-LAST:event_cmdEditarActionPerformed

    private void txtNroOpeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNroOpeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNroOpeActionPerformed

    private void txtCodCajaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodCajaFocusLost
        try {
            if (!origen.equals("")) {
                Caja caja = new Caja();
                this.txtCodCaja.setText(this.txtCodCaja.getText().toUpperCase());

                try {
                    if (this.txtCodCaja.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "Debe ingresar el c√≥digo de caja.",
                                "Habilitar Caja", JOptionPane.WARNING_MESSAGE);
                        this.txtCodCaja.grabFocus();
                    } else {
                        if (origen.equals("Nuevo") || origen.equals("Editar")) {
                            caja = obtenerCaja(this.txtCodCaja.getText());

                            if (caja != null) {
                                this.txtNomCaja.setText(caja.getNomCaja());
                            }
                        }
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error al recuperar caja. "
                            + "\n" + ex.getMessage() + "\n" + ex.getCause(),
                            "Habilitar Caja", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (HeadlessException e) {

        }
    }//GEN-LAST:event_txtCodCajaFocusLost

    private void txtMontoAperFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMontoAperFocusLost
              if(this.txtMontoAper.getText().equals("")){
            this.txtMontoAper.setValue(0);
        }
    }//GEN-LAST:event_txtMontoAperFocusLost

    private void txtNroOpeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNroOpeFocusLost
        try {
            if (!this.txtNroOpe.getText().isEmpty()) {
                int cod = Integer.parseInt(this.txtNroOpe.getText());
                buscarArqueo(cod);
            }
        } catch (NumberFormatException e) {
        }
    }//GEN-LAST:event_txtNroOpeFocusLost

    private void txtMontoAperKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoAperKeyTyped
        char car = evt.getKeyChar();
        if (txtMontoAper.getText().length() >= 10) {
            evt.consume();
        }
        
        if (car == ',' ||  car == '0' || car == '1' || car == '2' || car == '3' 
                || car == '4' || car == '5' || car == '6' || car == '7' || car == '8' || car == '9') {
           //no hace nada, deja pasar
        }else{
            evt.consume(); 
        }
    }//GEN-LAST:event_txtMontoAperKeyTyped

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
        ultimo();
    }//GEN-LAST:event_btnUltimoActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        siguiente();
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        anterior();
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeroActionPerformed
        primero();
    }//GEN-LAST:event_btnPrimeroActionPerformed

    private void cmdCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCerrarActionPerformed
        this.st.close();
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cmdCerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HabilitarCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HabilitarCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HabilitarCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HabilitarCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HabilitarCaja dialog = new HabilitarCaja(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnPrimero;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JButton cmdBuscar;
    private javax.swing.JButton cmdCancelar;
    private javax.swing.JButton cmdCerrar;
    private javax.swing.JButton cmdEditar;
    private javax.swing.JButton cmdGuardar;
    private javax.swing.JButton cmdNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblInfoPie;
    private javax.swing.JTextField txtCodCaja;
    private javax.swing.JFormattedTextField txtFecha;
    private javax.swing.JFormattedTextField txtMontoAper;
    private javax.swing.JTextField txtNomCaja;
    private javax.swing.JTextField txtNroOpe;
    // End of variables declaration//GEN-END:variables

    private void habilitarCampos() {
        this.cmdGuardar.setEnabled(true);
        this.cmdCancelar.setEnabled(true);
        this.cmdNuevo.setEnabled(false);
        this.cmdEditar.setEnabled(false);
        this.txtNroOpe.setEditable(false);
    }

    private void deshabilitarCampos() {
        this.cmdGuardar.setEnabled(false);
        this.cmdCancelar.setEnabled(false);
        this.cmdNuevo.setEnabled(true);
        this.cmdEditar.setEnabled(true);
        this.txtNroOpe.setEditable(true);
        this.txtNroOpe.setEditable(true);
    }

    private void inicializarCampos() {
        this.txtFecha.setText("");
        this.txtMontoAper.setValue(0);
        this.txtCodCaja.setText("");
        this.txtNomCaja.setText("");
        this.txtNroOpe.setText("");
    }
    
    private void nuevo(){
        habilitarCampos();
        inicializarCampos();
        this.origen = "Nuevo";
        
        this.masterNroOpe = obtenerNroOpe();
        this.txtFecha.setValue(new Date());
        this.txtMontoAper.setValue(0);
        this.txtCodCaja.setText("");
        this.txtNomCaja.setText("");
        this.txtNroOpe.setText(String.valueOf(this.masterNroOpe));
    }
 
    private void guardar() {
        Date fechaMod = new Date();
        ArqueoCab arq = new ArqueoCab();

        //valida que todos los datos necesarios esten cargados
        if (this.txtNomCaja.getText().equals("")) {
            this.txtNomCaja.grabFocus();
            JOptionPane.showMessageDialog(null, "Caja no ingresada. ",
                    "Habilitar Caja", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                st.beginTransaction();

                arq.setNroOperacion(this.masterNroOpe.intValue());
                arq.setCodCaja(this.txtCodCaja.getText());
                arq.setAperturaMn(new BigDecimal(this.txtMontoAper.getValue().toString()));
                arq.setFechaDesde(new Date());
                arq.setEstado('A');
                arq.setFechaMod(fechaMod);
                arq.setCodAjuste(1);
                arq.setImporteAjuste(BigDecimal.ZERO);
                arq.setAccionMod(origen);
                arq.setUsuarioMod(usuario);

                st.save(arq);
                st.getTransaction().commit();
                
                this.txtNroOpe.setText(String.valueOf(arq.getNroOperacion()));
                actualizarNroOpe();

            } catch (ConstraintViolationException ex){
                st.getTransaction().rollback();
                System.out.println("Ya existe una caja con el mismo n√∫mero de operaci√≥n.");
                actualizarNroOpe();
                guardar();
            } catch (Exception ex) {
                st.getTransaction().rollback();
                JOptionPane.showMessageDialog(null, "Error al guardar registro. "
                        + "\n" + ex.getMessage() + "\n" + ex.getCause(),
                        "Habilitar Caja", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }
    }
    
    private void guardarEdicion() {
        Date fechaMod = new Date();
        ArqueoCab arq = new ArqueoCab();

        //valida que todos los datos necesarios esten cargados
        if (this.txtNomCaja.getText().equals("")) {
            this.txtNomCaja.grabFocus();
            JOptionPane.showMessageDialog(null, "Caja no ingresada. ",
                    "Habilitar Caja", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                st.beginTransaction();

                arq = masterArqueo;
                System.out.println("Cod Caja : " + this.txtCodCaja.getText());
                arq.setCodCaja(this.txtCodCaja.getText());
                System.out.println("paso bien por caja");
                arq.setAperturaMn(new BigDecimal(this.txtMontoAper.getValue().toString()));
                System.out.println("paso bien por importe");
                arq.setFechaMod(fechaMod);
                arq.setAccionMod(origen);
                arq.setUsuarioMod(usuario);

                st.update(arq);
                st.getTransaction().commit();

            } catch (NullPointerException ex) {
                st.getTransaction().rollback();
            } catch (HibernateException ex) {
                st.getTransaction().rollback();
                JOptionPane.showMessageDialog(null, "Error al actualizar registro. "
                        + "\n" + ex.getMessage() + "\n" + ex.getCause(),
                        "Habilitar Caja", JOptionPane.INFORMATION_MESSAGE);
                ex.printStackTrace();
            }
        }
    }
    
    private BigInteger obtenerNroOpe() {
        BigInteger nroOpe = BigInteger.ZERO;

        try {
            Query query = st.createSQLQuery("SELECT last_value From seq_nro_arqueo");
            nroOpe = (BigInteger) query.uniqueResult();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error al generar nro. de operaci√≥n del Arqueo. "
                    + "\n" + ex.getMessage() + "\n" + ex.getCause(),
                    "Habilitar Caja", JOptionPane.ERROR_MESSAGE);
        }
        return nroOpe;
    }

    private void actualizarNroOpe() {
        BigInteger nroOpe = BigInteger.ZERO;
        try {
            Query query = st.createSQLQuery("SELECT NEXTVAL('seq_nro_arqueo')");
            nroOpe = (BigInteger) query.uniqueResult();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error al actualizar nro. de operaci√≥n del Arqueo. "
                    + "\n" + ex.getMessage() + "\n" + ex.getCause(),
                    "Habilitar Caja", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private Caja obtenerCaja(String cod) {
        Caja caja = null;
        try {
            caja = (Caja) st.get(Caja.class, cod);
            if (caja == null) {
                JOptionPane.showMessageDialog(null, "C√≥digo de caja buscado no existe.",
                        "Habilitar Caja", JOptionPane.INFORMATION_MESSAGE);
            } else {
                this.txtNomCaja.setText(caja.getNomCaja());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error al recuperar Caja. "
                    + "\n" + e.getMessage(), "Habilitar Caja", JOptionPane.ERROR_MESSAGE);
        }
        return caja;
    }
    
    private void buscarArqueo(){
        ArqueoCab var = null;
        try {
            BuscarComprobante formBusqueda
                    = new BuscarComprobante(this, true, 'V');
            formBusqueda.setDefaultCloseOperation(HIDE_ON_CLOSE);
            formBusqueda.setVisible(true);

            int codigo = Integer.parseInt(formBusqueda.getCodigoRetorno());
            System.out.println("Seleccionado: " + codigo);
            if (codigo > 0) {
               var = obtenerHabilitacion(codigo);
               
               if(var != null){
                   masterArqueo = var;
                   cargarDetalle(var);
               }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al realizar b√∫squeda de comprobante. " + "\n"
                    + e.getMessage(), "Error - Habilitar Caja", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void buscarArqueo(int cod) {
        ArqueoCab var = null;
        try {
            var = obtenerHabilitacion(cod);

            if (var != null) {
                masterArqueo = var;
                cargarDetalle(var);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al realizar b√∫squeda de comprobante. " + "\n"
                    + e.getMessage(), "Error - Habilitar Caja", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private ArqueoCab obtenerHabilitacion(int oper) {
        ArqueoCab arq = null;

        try {
            arq = (ArqueoCab) st.get(ArqueoCab.class, oper);
            if (arq == null) {
                JOptionPane.showMessageDialog(null, "C√≥digo buscado no existe. Intente de nuevo.",
                        "Habilitar Caja", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error al realizar consulta. "
                    + "\n" + e.getMessage(), "Error - Habilitar Caja", JOptionPane.ERROR_MESSAGE);
        }

        return arq;
    }
    
     private void primero() {
        if (posicion > 0 && ArrayPrimaryKey.size() > 0) {
            posicion = 0;
            recuperarRegistros(posicion);
            String mensaje = "Registro " + String.valueOf(posicion + 1).trim() + " de " + String.valueOf(ArrayPrimaryKey.size()).trim();
            this.lblInfoPie.setText(mensaje);
        } else {

        }
    }

    private void anterior() {
        if (posicion > 0 && ArrayPrimaryKey.size() > 0) {
            posicion--;
            recuperarRegistros(posicion);
            String mensaje = "Registro " + String.valueOf(posicion + 1).trim() + " de " + String.valueOf(ArrayPrimaryKey.size()).trim();
            this.lblInfoPie.setText(mensaje);
        } else {
        }
    }

    private void siguiente() {
        if (posicion < ArrayPrimaryKey.size() - 1 && ArrayPrimaryKey.size() > 0) {
            posicion++;
            recuperarRegistros(posicion);
            String mensaje = "Registro " + String.valueOf(posicion + 1).trim() + " de " + String.valueOf(ArrayPrimaryKey.size()).trim();
            this.lblInfoPie.setText(mensaje);
        } else {
        }
    }

    private void ultimo() {
        if (posicion < ArrayPrimaryKey.size() - 1 && ArrayPrimaryKey.size() > 0) {
            posicion = ArrayPrimaryKey.size() - 1;
            recuperarRegistros(posicion);
            String mensaje = "Registro " + String.valueOf(posicion + 1).trim() + " de " + String.valueOf(ArrayPrimaryKey.size()).trim();
            this.lblInfoPie.setText(mensaje);
        } else {
        }
    }

    private void buscarRegistros() {
        try {
            String SqlQuery = "select nro_operacion from arqueo_cab where nro_operacion > 0 ";
            if (!this.txtNroOpe.getText().isEmpty()) {
                SqlQuery = SqlQuery + " and nro_operacion = '" + this.txtNroOpe.getText() + "'";
            }            
            if (this.txtFecha.getValue() != null) {
                SqlQuery = SqlQuery + " and fecha_desde >= to_timestamp('" + this.txtFecha.getValue().toString() + "', 'dd/MM/yyyy')";
            }
            if (!this.txtCodCaja.getText().trim().isEmpty()) {
                SqlQuery = SqlQuery + " and cod_caja = '" + this.txtCodCaja.getText().trim() + "'";
            }

            SqlQuery = SqlQuery + " order by nro_operacion";
            Query consulta = st.createSQLQuery(SqlQuery);

            ArrayPrimaryKey = consulta.list();

            if (ArrayPrimaryKey.size() > 1) {
                posicion = 0;
                recuperarRegistros(posicion);
                this.btnPrimero.setEnabled(true);
                this.btnAnterior.setEnabled(true);
                this.btnSiguiente.setEnabled(true);
                this.btnUltimo.setEnabled(true);
                String mensaje = "Registro " + String.valueOf(posicion + 1).trim() 
                        + " de " + String.valueOf(ArrayPrimaryKey.size()).trim();
                this.lblInfoPie.setText(mensaje);

            } else if (ArrayPrimaryKey.size() == 1) {
                posicion = 0;
                recuperarRegistros(posicion);

                String mensaje = "Registro " + String.valueOf(posicion + 1).trim() 
                        + " de " + String.valueOf(ArrayPrimaryKey.size()).trim();
                this.lblInfoPie.setText(mensaje);
            } else {
                JOptionPane.showMessageDialog(null, "No existen registros para mostrar.", 
                        "Buscar", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (HeadlessException | HibernateException e) {
            e.printStackTrace();
        }
    }

    public void recuperarRegistros(int indice) {
        inicializarCampos();
        int nro_operacion = Integer.parseInt(ArrayPrimaryKey.get(indice).toString());
        //cargarDetalle(obtenerHabilitacion(nro_operacion));
        buscarArqueo(nro_operacion);
    }

    private void cargarDetalle(ArqueoCab arq) {
        try {
            this.txtNroOpe.setText(String.valueOf(arq.getNroOperacion()));
            this.txtFecha.setValue(arq.getFechaDesde());
            this.txtCodCaja.setText(arq.getCodCaja());
            this.txtNomCaja.setText((obtenerCaja(arq.getCodCaja()).getNomCaja()));
            this.txtMontoAper.setValue(arq.getAperturaMn());
            if (arq.getEstado() == 'C') {
                this.lblEstado.setText("Cancelado");
            } else {
                this.lblEstado.setText("Abierto");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
}
